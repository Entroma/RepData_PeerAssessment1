ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('rose','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
sums$group
unique(sums$group)
sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
a = 0.65
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('rose','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
unique(sums$group)
pattern.df <- df %>% group_by(interval) %>%
summarise(average.steps = mean(steps))
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line() +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE)
# Coun the number of rows with Na values
total.nas <- sum((is.na(ds$steps) | is.na(ds$date) | is.na(ds$interval)))
print('The total number of rows wih an NA value is: ')
print(total.nas)
# Using the mean value o impute all missing rows:
full.ds <- ds
print('The total number of rows wih an NA value is: ')
print(total.nas)
print('The total number of rows wih an NA value is: ')
print(total.nas)
# Using the mean value o impute all missing rows:
full.ds <- ds
# Fill in the missing data with the mean value. all other columns have no Nas
# So we only impute u=into steps.
full.ds[x, 'steps'] <- mean(df$steps)
#  Making he daily satistics
full.sums <- full.ds %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
# Make the hisogram of total daily steps:
ggplot(data = full.sums) + ggtitle('Daily Activity Pattern') + geom_density()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') + geom_density()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') #+ geom_density()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') + geom_density() + geom_histogram()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') + geom_density() + geom_histogram() +
xlab('Steps taken') + ylab('Densiy')
View(full.sums)
# Make the hisogram of total daily steps:
ggplot(full.sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'a'),
alpha = a, aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# Make the hisogram of total daily steps:
cols <- quantile(full.sums$total.steps)
full.sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
full.sums$group <- ifelse(full.sums$total.steps <= cols[1], 'a',
ifelse(full.sums$total.steps <= cols[2], 'b',
ifelse(full.sums$total.steps <= cols[4], 'c',
ifelse(full.sums$total.steps <= cols[5],
'd', 'e'))))
a = 0.65
ggplot(full.sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'a'),
alpha = a, aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'b'),
alpha = a, aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'c'),
alpha = a,aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'd'),
alpha = a, aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'e'),
alpha = a, aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
print(full.sums$median.steps)
View(plot.df)
print('The mean number of steps taken per day for this dataset is: ')
print(full.sums$mean.steps)
print('The median number of steps taken per day for this dataset is: ')
print(full.sums$median.steps)
print('As seen, imputing missing data changes the estimates as follows: ')
print('* The mean number of steps per day is now esimated to be higher')
print('* The median number of steps per day is non zero on the imputed rows')
print('* Imputing missing values increases the total number of steps per day')
?weekdays
day.types <- weekdays(full.sums$date)
sums$date
date
date()
as.Date.factor(full.sums$date)
unclass(as.Date.factor(full.sums$date))
as.Date.factor(full.sums$date)[1]
typeof(as.Date.factor(full.sums$date)[1])
w <- as.Date.factor(full.sums$date)[1]
w
days <- as.Date.factor(full.sums$date)
weekdays.Date(days)
days <- weekdays.Date(as.Date.factor(full.sums$date))
?as.factor
# Read the data set
ds <- read.csv2('activity/activity.csv', sep = ',')
# Find all Na rows in ds$steps
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x,]
# Load dplyr for the summary stats
library(dplyr)
# Load dplyr for the summary stats
library(dplyr)
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
library(ggplot2)
# Find the quantiles
cols <- quantile(sums$total.steps)
# Create quantile groups
sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
# Set a variable to store the alpha value
a = 0.65
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# Get the dates, turn them into a Date type, then turn them into week day names
days <- weekdays.Date(as.Date.factor(full.ds$date))
# Then we conver them into a factor and store it in the data.frame
full.ds$day.type <- as.factor(days)
# Summarise the data.frame
plot.df <- full.ds %>% group_by(interval, day.type) %>%
summarise(mean.steps = mean(steps) )
# Plot the time series data.
ggplot(data = plot.df, aes(x = interval, y = mean.steps)) +
geom_line() + ggtitle('Weekday/Weekend Activity patterns') +
xlab('5 - Minute interval') + ylab('Average daily steps') +
facet_grid(day.type ~ .)
# Next we set them to 'weekend', or 'weekday' depending on the day type
days <- c(ifelse(days == 'Sunday' | days == 'Saturday', 'Weekend', 'Weekday'))
# Then we conver them into a factor and store it in the data.frame
full.ds$day.type <- as.factor(days)
# Summarise the data.frame
plot.df <- full.ds %>% group_by(interval, day.type) %>%
summarise(mean.steps = mean(steps) )
# Plot the time series data.
ggplot(data = plot.df, aes(x = interval, y = mean.steps)) +
geom_line() + ggtitle('Weekday/Weekend Activity patterns') +
xlab('5 - Minute interval') + ylab('Average daily steps') +
facet_grid(day.type ~ .)
# Plot the time series data.
ggplot(data = plot.df, aes(x = interval, y = mean.steps)) +
geom_line(aes(col = 'blue')) + ggtitle('Weekday/Weekend Activity patterns') +
xlab('5 - Minute interval') + ylab('Average daily steps') +
facet_grid(day.type ~ .)
# Plot the time series data.
ggplot(data = plot.df, aes(x = interval, y = mean.steps)) +
geom_line(col = 'Blue') + ggtitle('Weekday/Weekend Activity patterns') +
xlab('5 - Minute interval') + ylab('Average daily steps') +
facet_grid(day.type ~ .)
#Plot the data.frame, with an added horizontal line for the overall mean
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line() +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE, aes(col = 'green'))
#Plot the data.frame, with an added horizontal line for the overall mean
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line() +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE, col = 'green')
#Plot the data.frame, with an added horizontal line for the overall mean
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line(col = 'brown') +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE, col = 'green')
# Plot the dataset
# First we create he file type
png('images/imputed histogram.png', width = 1000, height = 1500)
# Read the data set
ds <- read.csv2('activity/activity.csv', sep = ',')
# Find all Na rows in ds$steps
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x,]
# Load dplyr for the summary stats
library(dplyr)
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
library(ggplot2)
# Find the quantiles
cols <- quantile(sums$total.steps)
# Create quantile groups
sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
# Set a variable to store the alpha value
a = 0.65
#first we creae the png file
png('figure/histogram.png', width = 1000, height = 1500)
#first we creae the png file
png("figure/histogram.png", width = 1000, height = 1500)
#first we creae the png file
png("histogram.png", width = 1000, height = 1500)
#first we creae the png file
setwd('/figure')
#first we creae the png file
setwd('/figure/')
#first we creae the png file
png("figure/histogram.png", width = 1000, height = 1500)
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# now we save the file
dev.off()
#first we creae the png file
png("figure/histogram.png", width = 1000, height = 1500)
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
#first we creae the png file
png("figure/histogram.png", width = 1000, height = 1500)
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# now we save the file
dev.off()
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# Global Options:
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, fig.path = 'figure')
# Global Options:
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, fig.path = 'figure')
## Loading and preprocessing the data
```{r}
# Get he current working directory
wd <- getwd();
# Extract the data set if the data set folder does not exists
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
# Read the data set
ds <- read.csv2('activity/activity.csv', sep = ',')
# Find all Na rows in ds$steps
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x,]
# Load dplyr for the summary stats
library(dplyr)
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
library(ggplot2)
# Find the quantiles
cols <- quantile(sums$total.steps)
# Create quantile groups
sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
# Set a variable to store the alpha value
a = 0.65
#first we creae the png file
png("figure/histogram.png", width = 1000, height = 1500)
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# now we save the file
dev.off()
#first we creae the png file
png("histogram.png", width = 1000, height = 1500)
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# now we save the file
dev.off()
# Global Options:
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE, fig.path = '/figure')
# now we save the file
dev.off()
#first we creae the png file
png("histogram.png", width = 1000, height = 1500)
# Create a histogram of the total steps per day, coloured by quantile group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'lightblue',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# now we save the file
dev.off()
# First we make the png file
png('activity pattern.png', width = 1000, height = 1500)
#Plot the data.frame, with an added horizontal line for the overall mean
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line(col = 'brown') +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE, col = 'green')
# Create a new data.frame for the mean steps per 5 minute interval
pattern.df <- df %>% group_by(interval) %>%
summarise(average.steps = mean(steps))
# First we make the png file
png('activity pattern.png', width = 1000, height = 1500)
#Plot the data.frame, with an added horizontal line for the overall mean
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line(col = 'brown') +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE, col = 'green')
# Now we save the png
dev.off()
