if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
ds <- read.csv2('activity/activity.csv')
ds <- read.csv2('activity/activity.csv', sep = ','
ds <- read.csv2('activity/activity.csv', sep = ',')
ds <- read.csv2('activity/activity.csv', sep = ',')
days <- ds$date
is.na(ds$steps)
x <- is.na(ds$steps)
ds[!x]
ds['seps']
ds['steps']
ds['steps'][!x]
ds['steps'][x]
ds[x, ]
ds[!x, ]
steps.daily <- sum(ds[!x, 'steps])
#
;
fews
gs
#
33
(!dir.exists(file.path(wd, 'activity'))){
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
ds <- read.csv2('activity/activity.csv', sep = ',')
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x, 'steps']
library(dplyr)
sums <- df %>% select(steps, date) %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
sums <- df %>% select_all(steps, date) %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
?select
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
?group_by
df$date
df
df <- ds[!x,]
df
df$date
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
head(sums)
max(sums$median.steps)
max(sums$mean.steps)
max(sums$total.steps)
?median
median(sums$total.steps)
median(df$steps)
?geom_histogram
# Create a histogram of the total steps per day
library(ggplot2)
library(ggplot2)
# Create a histogram of the total steps per day
?geom_histogram
geom_histogram(binwidth = 2, aes(x = sums$total.steps, y = sums$date))
geom_histogram(binwidth = 2, aes(x = sums$total.steps, y = sums$date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken') +
ggplot()
geom_histogram(binwidth = 2, aes(x = sums$total.steps, y = sums$date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken') +
ggplot()
ggplot(data = sums, aes(x = total.steps, y = date)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
{r fig.width=10, fig.height=60}
{r, fig.width=10, fig.height=60}
# Find all Na rows in ds$steps
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x,]
# Load dplyr for the summary stats
library(dplyr)
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
# Create a histogram of the total steps per day
library(ggplot2)
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
## What is mean total number of steps taken per day?
```{r fig.width=10, fig.height=8}
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date), binwidth = 5) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date), binwidth = 100) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date), binwidth = 10000000) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density()
# Global Options:
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
ds <- read.csv2('activity/activity.csv', sep = ',')
# Find all Na rows in ds$steps
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x,]
# Load dplyr for the summary stats
library(dplyr)
# Load dplyr for the summary stats
library(dplyr)
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
sums$group <- ifelse(sums$total.steps <= cols[1], 1,
ifelse(sums$total.steps <= cols[2], 2,
ifelse(sums$total.steps <= cols[4], 3,
ifelse(sums$total.steps <= cols[5], 4, 5))))
cols <- quantile(sums$total.steps)
cols <- quantile(sums$total.steps)
sums$group <- ifelse(sums$total.steps <= cols[1], 1,
ifelse(sums$total.steps <= cols[2], 2,
ifelse(sums$total.steps <= cols[4], 3,
ifelse(sums$total.steps <= cols[5], 4, 5))))
a = 0.65
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density()
# Create a histogram of the total steps per day
library(ggplot2)
cols <- quantile(sums$total.steps)
sums$group <- ifelse(sums$total.steps <= cols[1], 1,
ifelse(sums$total.steps <= cols[2], 2,
ifelse(sums$total.steps <= cols[4], 3,
ifelse(sums$total.steps <= cols[5], 4, 5))))
a = 0.65
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density()
unique(sums$group)
cols
max(sums$total.steps)
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine'), labels = c('First quartile', 'Second Quartile', 'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
?scale_fill_continuous
?scale_fill_manual
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_colour_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_colour_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine')) +
labels(c('First quartile', 'Second Quartile', 'Mid-range', 'Third Quarile',
'Fourth quartile'))
?labels
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 1), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 2), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 3), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 4), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 5), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_colour_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine')) +
labels(c('First quartile', 'Second Quartile', 'Mid-range', 'Third Quarile',
'Fourth quartile'), values = unique(sums$group))
set.seed(1)
plot.df <- data.frame(x=c(rnorm(1000,30,1),rnorm(10000,40,5)),
group=c(rep("a",1000),rep("b",10000)))
plot.df$group
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('rose','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
sums$group
unique(sums$group)
sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
a = 0.65
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('rose','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('velvet','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
ggplot(sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'a'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
unique(sums$group)
pattern.df <- df %>% group_by(interval) %>%
summarise(average.steps = mean(steps))
ggplot(data = pattern.df, aes(x = interval, y = average.steps)) + geom_line() +
xlab('5 - Minute Interval') + ylab('Average Daily Steps') +
ggtitle('Daily Activity Pattern') +
geom_hline(yintercept =  mean(df$steps), show.legend = TRUE)
# Coun the number of rows with Na values
total.nas <- sum((is.na(ds$steps) | is.na(ds$date) | is.na(ds$interval)))
print('The total number of rows wih an NA value is: ')
print(total.nas)
# Using the mean value o impute all missing rows:
full.ds <- ds
print('The total number of rows wih an NA value is: ')
print(total.nas)
print('The total number of rows wih an NA value is: ')
print(total.nas)
# Using the mean value o impute all missing rows:
full.ds <- ds
# Fill in the missing data with the mean value. all other columns have no Nas
# So we only impute u=into steps.
full.ds[x, 'steps'] <- mean(df$steps)
#  Making he daily satistics
full.sums <- full.ds %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
# Make the hisogram of total daily steps:
ggplot(data = full.sums) + ggtitle('Daily Activity Pattern') + geom_density()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') + geom_density()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') #+ geom_density()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') + geom_density() + geom_histogram()
# Make the hisogram of total daily steps:
ggplot(data = full.sums, aes(x = full.sums$total.steps)) + ggtitle('Daily Activity Pattern') + geom_density() + geom_histogram() +
xlab('Steps taken') + ylab('Densiy')
View(full.sums)
# Make the hisogram of total daily steps:
ggplot(full.sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'a'),
alpha = a, aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'b'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'c'), alpha = a,
aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'd'), alpha = a,
aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'e'), alpha = a,
aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
# Make the hisogram of total daily steps:
cols <- quantile(full.sums$total.steps)
full.sums$group <- ifelse(sums$total.steps <= cols[1], 'a',
ifelse(sums$total.steps <= cols[2], 'b',
ifelse(sums$total.steps <= cols[4], 'c',
ifelse(sums$total.steps <= cols[5],
'd', 'e'))))
full.sums$group <- ifelse(full.sums$total.steps <= cols[1], 'a',
ifelse(full.sums$total.steps <= cols[2], 'b',
ifelse(full.sums$total.steps <= cols[4], 'c',
ifelse(full.sums$total.steps <= cols[5],
'd', 'e'))))
a = 0.65
ggplot(full.sums, aes(x = total.steps)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'a'),
alpha = a, aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'b'),
alpha = a, aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'c'),
alpha = a,aes(fill = group))+
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'd'),
alpha = a, aes(fill = group)) +
geom_histogram(binwidth = 450, data = subset(full.sums, group == 'e'),
alpha = a, aes(fill = group)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Density')+
geom_density() + scale_fill_manual(name = 'group',
values = c('red','orange', 'yellow', 'pink',
'aquamarine'),
labels = c('First quartile', 'Second Quartile',
'Mid-range', 'Third Quarile', 'Fourth quartile'))
print(full.sums$median.steps)
View(plot.df)
print('The mean number of steps taken per day for this dataset is: ')
print(full.sums$mean.steps)
print('The median number of steps taken per day for this dataset is: ')
print(full.sums$median.steps)
print('As seen, imputing missing data changes the estimates as follows: ')
print('* The mean number of steps per day is now esimated to be higher')
print('* The median number of steps per day is non zero on the imputed rows')
print('* Imputing missing values increases the total number of steps per day')
?weekdays
day.types <- weekdays(full.sums$date)
sums$date
date
date()
as.Date.factor(full.sums$date)
unclass(as.Date.factor(full.sums$date))
as.Date.factor(full.sums$date)[1]
typeof(as.Date.factor(full.sums$date)[1])
w <- as.Date.factor(full.sums$date)[1]
w
days <- as.Date.factor(full.sums$date)
weekdays.Date(days)
days <- weekdays.Date(as.Date.factor(full.sums$date))
?as.factor
