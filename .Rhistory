gwd()
cwd()
wd
getwd()
help.searh('concantenate')
help.searh('concatenate')
help.search("concatenate")
wd <- getwd();
if(dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zipF,exdir=outDir)
}
wd <- getwd();
if(dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zipF,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zipF,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity/activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
ds <- read.csv2('activity/activity.csv')
ds <- read.csv2('activity/activity.csv', sep = ','
ds <- read.csv2('activity/activity.csv', sep = ',')
ds <- read.csv2('activity/activity.csv', sep = ',')
days <- ds$date
is.na(ds$steps)
x <- is.na(ds$steps)
ds[!x]
ds['seps']
ds['steps']
ds['steps'][!x]
ds['steps'][x]
ds[x, ]
ds[!x, ]
steps.daily <- sum(ds[!x, 'steps])
#
;
fews
gs
#
33
(!dir.exists(file.path(wd, 'activity'))){
wd <- getwd();
if(!dir.exists(file.path(wd, 'activity'))){
zip <- paste(wd, 'activity.zip', sep = '/');
outDir <- paste(wd, 'activity', sep = '/');
unzip(zip,exdir=outDir)
}
ds <- read.csv2('activity/activity.csv', sep = ',')
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x, 'steps']
library(dplyr)
sums <- df %>% select(steps, date) %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
sums <- df %>% select_all(steps, date) %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
?select
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
?group_by
df$date
df
df <- ds[!x,]
df
df$date
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
head(sums)
max(sums$median.steps)
max(sums$mean.steps)
max(sums$total.steps)
?median
median(sums$total.steps)
median(df$steps)
?geom_histogram
# Create a histogram of the total steps per day
library(ggplot2)
library(ggplot2)
# Create a histogram of the total steps per day
?geom_histogram
geom_histogram(binwidth = 2, aes(x = sums$total.steps, y = sums$date))
geom_histogram(binwidth = 2, aes(x = sums$total.steps, y = sums$date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken') +
ggplot()
geom_histogram(binwidth = 2, aes(x = sums$total.steps, y = sums$date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken') +
ggplot()
ggplot(data = sums, aes(x = total.steps, y = date)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Date') + ylab('Total Steps Taken')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
{r fig.width=10, fig.height=60}
{r, fig.width=10, fig.height=60}
# Find all Na rows in ds$steps
x <- is.na(ds$steps)
# Remove the NA rows and store the new data.frame as df
df <- ds[!x,]
# Load dplyr for the summary stats
library(dplyr)
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
# Create a histogram of the total steps per day
library(ggplot2)
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
## What is mean total number of steps taken per day?
```{r fig.width=10, fig.height=8}
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
# Use piping to create a new data.frame with all the daily steps grouped by say
sums <- df %>% group_by(date) %>%
summarise(total.steps = sum(steps), mean.steps = mean(steps),
median.steps = median(steps))
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date), binwidth = 5) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date), binwidth = 100) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date), binwidth = 10000000) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
ggplot(data = sums, aes(x = total.steps)) +
geom_histogram(aes(color = date)) +
ggtitle('Total Steps Per Day') + xlab('Total Steps Taken') + ylab('Frequency')
